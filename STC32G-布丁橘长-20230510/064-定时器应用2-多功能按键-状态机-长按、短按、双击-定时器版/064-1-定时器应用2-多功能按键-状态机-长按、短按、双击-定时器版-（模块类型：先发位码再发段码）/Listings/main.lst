C251 COMPILER V5.57.0,  main                                                               15/02/23  01:26:58  PAGE 1   


C251 COMPILER V5.57.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\SoftWare\KeilARM\C251\BIN\C251.EXE main.c XSMALL BROWSE DEBUG PRINT(.\Listings\main.lst) TABS(2)
                    - OBJECT(.\Objects\main.obj) 

stmt  level    source

    1          //    @布丁橘长 2023/02/14
    2          //    多功能按键-定时器版-状态机-长按、短按、双击
    3          //    占用定时器4，需要在主函数中对定时器4初始化：Timer4_Init();并使能EA=1
    4          //    KEY1短按：LED1点亮。 KEY1长按：LED1熄灭。KEY1双击：LED1、LED2点亮，再次双击，LED1、LED2熄灭
    5          //    KEY2短按：LED3点亮。 KEY2长按：LED3熄灭。KEY2双击：LED3、LED4点亮，再次双击，LED3、LED4熄灭
    6          //    KEY3短按：LED5点亮。 KEY3长按：LED5熄灭。KEY3双击：LED5、LED6点亮，再次双击，LED5、LED6熄灭
    7          //    KEY4短按：LED7点亮。 KEY4长按：LED7熄灭。KEY4双击：LED7、LED8点亮，再次双击，LED7、LED8熄灭
    8          //    数码管显示对应键值
    9          //    8位共阳极LED模块，由8个LED共阳极连接，每个LED配一个限流电阻。公共端接VCC，低电平点亮。
   10          //    板载4个独立按键，每个按键一端接GND，另一端串一个300欧电阻后，接P32-P35
   11          //    LED引脚定义： P20-LED1 P21-LED2 P22-LED3 P23-LED4 P24-LED5 P25-LED6 P26-LED7 P27-LED8
   12          //    数码管模块引脚定义：DS(DIO):P6.6 SH(SCK):P6.5 ST(RCK):P6.4
   13          //    按键引脚定义：P32->KEY1 P33->KEY2 P34->KEY3 P35->KEY4，在key_multi.h中定义
   14          //    实验开发板：STC32G12K128-LQFP64 屠龙刀三.1 35MHz 
   15          
   16          #include <STC32G.H>
   17          #include "key_multi_timer.h"
   18          #include "config.h"
   19          #include "seg595.h"
   20          
   21          #define ON  0       //定义0 为 开（共阳极LED电路）
   22          #define OFF 1       //定义1 为 关（共阳极LED电路）
   23          
   24          sbit LED1 = P2^0;   //引脚定义：LED1->P20
   25          sbit LED2 = P2^1;   //引脚定义：LED2->P21
   26          sbit LED3 = P2^2;   //引脚定义：LED3->P22
   27          sbit LED4 = P2^3;   //引脚定义：LED4->P23
   28          sbit LED5 = P2^4;   //引脚定义：LED5->P24
   29          sbit LED6 = P2^5;   //引脚定义：LED6->P25
   30          sbit LED7 = P2^6;   //引脚定义：LED7->P26
   31          sbit LED8 = P2^7;   //引脚定义：LED8->P27
   32          
   33          void Timer0_Init(void);
   34          
   35          u8 Key1_nums,Key2_nums,Key3_nums,Key4_nums;   //KEY1双击次数，KEY2双击次数，KEY3双击次数，KEY4双击次数
   36          u8 keyvalue;    //键值
   37          u8 segvalue;
   38          void main()
   39          {
   40   1        EAXFR = 1;      // 使能访问 XFR
   41   1        CKCON = 0x00;   // 设置外部数据总线速度为最快
   42   1        WTST = 0x00;    // 设置程序代码等待参数，等待时间为0个时钟，CPU执行程序速度最快
   43   1        
   44   1        P0M1 = 0x00;P0M0 = 0x00;    //设置P0口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   45   1        P1M1 = 0x00;P1M0 = 0x00;    //设置P1口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   46   1        P2M1 = 0x00;P2M0 = 0x00;    //设置P2口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   47   1        P3M1 = 0x00;P3M0 = 0x00;    //设置P3口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   48   1        P4M1 = 0x00;P4M0 = 0x00;    //设置P4口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   49   1        P5M1 = 0x00;P5M0 = 0x00;    //设置P5口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   50   1        P6M1 = 0x00;P6M0 = 0x00;    //设置P6口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   51   1        P7M1 = 0x00;P7M0 = 0x00;    //设置P7口为准双向口模式 //00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   52   1        
   53   1        Timer4_Init();          //定时器4初始化
   54   1        EA = 1;                 //使能EA总中断
   55   1        while(1)
   56   1        {
   57   2          keyvalue = key_multi();   //读取键值（键值和长按短按双击的复合键值）
   58   2          
C251 COMPILER V5.57.0,  main                                                               15/02/23  01:26:58  PAGE 2   

   59   2          if(keyvalue == Key1_Single_Click)
   60   2          {
   61   3            LED1 = ON;      //KEY1短按，点亮LED1
   62   3            segvalue = Key1_Single_Click;
   63   3          }
   64   2          if(keyvalue == Key1_Long_Click) 
   65   2          {
   66   3            LED1 = OFF;     //KEY1长按，熄灭LED1
   67   3            segvalue = Key1_Long_Click;
   68   3          }
   69   2          if(keyvalue == Key1_Double_Click)                 //KEY1双击，点亮LED1、LED2，再次双击熄灭LED1、LED2
   70   2          {
   71   3            Key1_nums++;    //KEY1双击次数
   72   3            segvalue = Key1_Double_Click;
   73   3            if(Key1_nums%2 == 1)    //奇数次双击，点亮LED1、LED2
   74   3            {
   75   4              LED1 = ON;
   76   4              LED2 = ON;
   77   4            }
   78   3            if(Key1_nums%2 == 0)    //偶数次双击，熄灭LED1、LED2
   79   3            {
   80   4              LED1 = OFF;
   81   4              LED2 = OFF;
   82   4            }
   83   3            if(Key1_nums >= 99) Key1_nums = 0;    //防止KEY1双击次数溢出，清零
   84   3          }
   85   2          
   86   2          if(keyvalue == Key2_Single_Click)
   87   2          {
   88   3            LED3 = ON;      //KEY2短按，点亮LED3
   89   3            segvalue = Key2_Single_Click;
   90   3          }
   91   2          if(keyvalue == Key2_Long_Click)   
   92   2          {
   93   3            LED3 = OFF;     //KEY2长按，熄灭LED3
   94   3            segvalue = Key2_Long_Click;
   95   3          }
   96   2          if(keyvalue == Key2_Double_Click)                 //KEY3双击，点亮LED3、LED4，再次双击，熄灭LED3、LED4
   97   2          {
   98   3            Key2_nums++;    //KEY2双击次数
   99   3            segvalue = Key2_Double_Click;
  100   3            if(Key2_nums%2 == 1)    //奇数次双击，点亮LED3、LED4
  101   3            {
  102   4              LED3 = ON;
  103   4              LED4 = ON;
  104   4            }
  105   3            if(Key2_nums%2 == 0)    //偶数次双击，熄灭LED3、LED4
  106   3            {
  107   4              LED3 = OFF;
  108   4              LED4 = OFF;
  109   4            }
  110   3            if(Key2_nums >= 99) Key2_nums = 0;  //防止KEY2双击次数溢出，清零
  111   3          }
  112   2          
  113   2          if(keyvalue == Key3_Single_Click)
  114   2          { 
  115   3            LED5 = ON;      //KEY3短按，点亮LED5
  116   3            segvalue = Key3_Single_Click;
  117   3          }
  118   2          if(keyvalue == Key3_Long_Click)
  119   2          {
  120   3            LED5 = OFF;     //KEY3长按，熄灭LED5
  121   3            segvalue = Key3_Long_Click;
  122   3          }
  123   2          if(keyvalue == Key3_Double_Click)                 //KEY3双击，点亮LED5、LED6，再次双击，熄灭LED5、LED6
  124   2          {
C251 COMPILER V5.57.0,  main                                                               15/02/23  01:26:58  PAGE 3   

  125   3            Key3_nums++;    //KEY3双击次数
  126   3            segvalue = Key3_Double_Click;
  127   3            if(Key3_nums%2 == 1)    //奇数次双击，点亮LED5、LED6
  128   3            {
  129   4              LED5 = ON;
  130   4              LED6 = ON;
  131   4            }
  132   3            if(Key3_nums%2 == 0)    //偶数次双击，熄灭LED5、LED6
  133   3            {
  134   4              LED5 = OFF;
  135   4              LED6 = OFF;
  136   4            }
  137   3            if(Key3_nums >= 99) Key3_nums = 0;    //防止KEY3双击次数溢出，清零
  138   3          }
  139   2          
  140   2          if(keyvalue == Key4_Single_Click) 
  141   2          {
  142   3            LED7 = ON;      //KEY4短按，点亮LED7
  143   3            segvalue = Key4_Single_Click;
  144   3          }
  145   2          if(keyvalue == Key4_Long_Click)   
  146   2          {
  147   3            LED7 = OFF;     //KEY4长按，熄灭LED7
  148   3            segvalue = Key4_Long_Click;
  149   3          }
  150   2          if(keyvalue == Key4_Double_Click)                 //KEY4双击，点亮LED7、LED8，再次双击，熄灭LED7、LED8
  151   2          {
  152   3            Key4_nums++;    //KEY4双击次数
  153   3            segvalue = Key4_Double_Click;
  154   3            if(Key4_nums%2 == 1)    //奇数次双击，点亮LED7、LED8  
  155   3            {
  156   4              LED7 = ON;
  157   4              LED8 = ON;
  158   4            }
  159   3            if(Key4_nums%2 == 0)    //偶数次双击，熄灭LED7、LED8
  160   3            {
  161   4              LED7 = OFF;
  162   4              LED8 = OFF;
  163   4            }
  164   3            if(Key4_nums >= 99) Key4_nums = 0;    //防止KEY4双击次数溢出，清零
  165   3          }
  166   2          SEG_Disp((u8)(segvalue/10),7);
  167   2          SEG_Disp((u8)(segvalue%10),8);
  168   2        }
  169   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       474     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         6     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
