C251 COMPILER V5.57.0,  main                                                               21/02/23  22:14:56  PAGE 1   


C251 COMPILER V5.57.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\SoftWare\KeilC251\C251\BIN\C251.EXE main.c XSMALL BROWSE DEBUG PRINT(.\Listings\main.lst) TABS(2
                    -) OBJECT(.\Objects\main.obj) 

stmt  level    source

    1          //    @²¼¶¡éÙ³¤ 2023/02/04
    2          //    4*4¾ØÕó¼üÅÌ£ºÊýÂë¹ÜÏÔÊ¾°´¼üÐòºÅ01-16
    3          //    ¾ØÕó¼üÅÌÒý½Å¶¨Òå£ºÁÐ£ºC4-P2.7 C3-P2.6 C2-P2.5 C1-P2.4 ÐÐ£ºR1-P2.3 R2-P2.2 R3-P2.1 R4-P2.0(×îÉÏÃæÎªµÚÒ
             -»ÐÐ£¬×î×ó±ßÎ»µÚÒ»ÁÐ)
    4          //    8Î»¹²Ñô¼«ÊýÂë¹ÜÄ£¿é-595¼¶ÁªÇý¶¯£ºDS(DIO):P6.6 SH(SCK):P6.5 ST(RCK):P6.4
    5          //    ÊµÑé¿ª·¢°å£ºSTC32G12K128-LQFP64 ÍÀÁúµ¶Èý.1  35MHz
    6          
    7          #include <STC32G.H>
    8          
    9          #define MAIN_Fosc 35000000UL    //¶¨ÒåÖ÷Æµ35MHz£¬Çë¸ù¾ÝÊµ¼ÊÊ¹ÓÃÆµÂÊÐÞ¸Ä£¨ÓÃÓÚdelayº¯Êý×ÔÊÊÓ¦Ö÷Æµ£©
   10          
   11          typedef unsigned char u8;       //unsigned char     ÀàÐÍÓÃ u8 ±íÊ¾
   12          typedef unsigned int u16;       //unsigned int      ÀàÐÍÓÃ u16±íÊ¾
   13          typedef unsigned long int u32;  //unsigned long int ÀàÐÍÓÃ u32±íÊ¾
   14          
   15          sbit DS = P6^6;       //´®ÐÐÊäÈëDS(DIO)½ÓP6.6
   16          sbit SH = P6^5;       //´®ÐÐÊäÈëÊ±ÖÓSH(SCK)½ÓP6.5
   17          sbit ST = P6^4;       //Ëø´æÊ±ÖÓST(RCK)½ÓP6.4
   18          
   19          void delayms(u16 ms);           //ÑÓÊ±º¯ÊýÉùÃ÷
   20          void Write595(u8 dat);          //595Ð´Êý¾Ýº¯ÊýÉùÃ÷
   21          void Output595();               //595Êä³öÏÔÊ¾º¯ÊýÉùÃ÷
   22          void SEG_Disp(u8 dat,u8 wei);   //ÊýÂë¹ÜÏÔÊ¾º¯ÊýÉùÃ÷
   23          u8 Matrix_key();                //¾ØÕó°´¼üº¯ÊýÉùÃ÷
   24          
   25          //¹²Ñô¼«¶ÎÂëÊý×é
   26          u8 SEG_Code[13] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,   //¹²ÑôÊýÂë¹Ü¶ÎÂë£º0~9,  
   27                              0xff,0xbf,0x00};  //ÊýÂë¹ÜÈ«Ãð£¨10£©£¬ºá¸Ë-£¨11£©£¬ÊýÂë¹ÜÈ«ÁÁ£¨12£©
   28          //¹²Ñô¼«Î»ÂëÊý×é-4Î»ÊýÂë¹Ü
   29          //u8 WEI_Code[8] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};   //¹²Ñô¼«Î»ÂëÊý×é£¬COM1½Ó595Q0£¬COM2½ÓQ1...
             -¼´ÊýÂë¹Ü×ó±ßµÚÒ»Î»½ÓQ0...µÚ°ËÎ»½ÓQ7
   30          u8 WEI_Code[8] = {0x80,0x40,0x20,0x10,0x08,0x04,0x02,0x01};   //¹²Ñô¼«Î»ÂëÊý×é£¬COM1½Ó595Q7£¬COM2½ÓQ6...¼´
             -ÊýÂë¹Ü×ó±ßµÚÒ»Î»½ÓQ7...µÚ°ËÎ»½ÓQ0
   31          
   32          void main()
   33          {
   34   1        u8 keynum;
   35   1        
   36   1        EAXFR = 1;        //Ê¹ÄÜXFR·ÃÎÊ
   37   1        CKCON = 0x00;     //ÉèÖÃÍâ²¿Êý¾Ý×ÜÏßËÙ¶È×î¿ì
   38   1        WTST = 0x00;      //ÉèÖÃ³ÌÐò¶ÁÈ¡µÈ´ýÊ±¼äÎª0¸öÊ±ÖÓ£¬CPUÖ´ÐÐ³ÌÐòËÙ¶È×î¿ì
   39   1        
   40   1        P0M1 = 0x00;P0M0 = 0x00;    //ÉèÖÃP0¿ÚÎª×¼Ë«Ïò¿ÚÄ£Ê½ 00£º×¼Ë«Ïò¿Ú 01£ºÍÆÍìÊä³ö 10£º¸ß×èÊäÈë 11£º¿ªÂ©Êä³ö
   41   1        P1M1 = 0x00;P1M0 = 0x00;    //ÉèÖÃP1¿ÚÎª×¼Ë«Ïò¿ÚÄ£Ê½ 00£º×¼Ë«Ïò¿Ú 01£ºÍÆÍìÊä³ö 10£º¸ß×èÊäÈë 11£º¿ªÂ©Êä³ö
   42   1        P2M1 = 0x00;P2M0 = 0x00;    //ÉèÖÃP2¿ÚÎª×¼Ë«Ïò¿ÚÄ£Ê½ 00£º×¼Ë«Ïò¿Ú 01£ºÍÆÍìÊä³ö 10£º¸ß×èÊäÈë 11£º¿ªÂ©Êä³ö
   43   1        P3M1 = 0x00;P3M0 = 0x00;    //ÉèÖÃP3¿ÚÎª×¼Ë«Ïò¿ÚÄ£Ê½ 00£º×¼Ë«Ïò¿Ú 01£ºÍÆÍìÊä³ö 10£º¸ß×èÊäÈë 11£º¿ªÂ©Êä³ö
   44   1        P4M1 = 0x00;P4M0 = 0x00;    //ÉèÖÃP4¿ÚÎª×¼Ë«Ïò¿ÚÄ£Ê½ 00£º×¼Ë«Ïò¿Ú 01£ºÍÆÍìÊä³ö 10£º¸ß×èÊäÈë 11£º¿ªÂ©Êä³ö
   45   1        P5M1 = 0x00;P5M0 = 0x00;    //ÉèÖÃP5¿ÚÎª×¼Ë«Ïò¿ÚÄ£Ê½ 00£º×¼Ë«Ïò¿Ú 01£ºÍÆÍìÊä³ö 10£º¸ß×èÊäÈë 11£º¿ªÂ©Êä³ö
   46   1        P6M1 = 0x00;P6M0 = 0x00;    //ÉèÖÃP6¿ÚÎª×¼Ë«Ïò¿ÚÄ£Ê½ 00£º×¼Ë«Ïò¿Ú 01£ºÍÆÍìÊä³ö 10£º¸ß×èÊäÈë 11£º¿ªÂ©Êä³ö
   47   1        
   48   1        while(1)
   49   1        {
   50   2          keynum = Matrix_key();              //»ñÈ¡°´¼üºÅ
   51   2          if(keynum >= 10)                    //ÊýÂë¹Ü×óÆðµÚ7Î»Ö»ÓÐ°´¼üºÅ´óÓÚµÈÓÚ10²ÅÏÔÊ¾
   52   2          {
   53   3            SEG_Disp((u8)(keynum / 10),7);    //ÊýÂë¹Ü×óÆðµÚ7Î»ÏÔÊ¾°´¼üºÅÊ®Î»
   54   3            delayms(1);
   55   3          }
C251 COMPILER V5.57.0,  main                                                               21/02/23  22:14:56  PAGE 2   

   56   2          SEG_Disp((u8)(keynum % 10),8);      //ÊýÂë¹Ü×óÆðµÚ7Î»ÏÔÊ¾°´¼üºÅ¸öÎ»
   57   2          delayms(1);
   58   2        }
   59   1      }
   60          
   61          void  delayms(u16 ms)   //¼òµ¥ÑÓÊ±º¯Êý£¬×ÔÊÊÓ¦Ö÷Æµ£¬1ºÁÃë*ms
   62          {
   63   1        u16 i;
   64   1        do{
   65   2            i = MAIN_Fosc / 6000;
   66   2            while(--i);
   67   2          }while(--ms);
   68   1      }
   69          u8 Matrix_key()
   70          {
   71   1        u8 temp,keyvalue;   //temp£ºP2Öµ»º´æ£¬keyvalue:°´¼üºÅ
   72   1        u8 keystate;        //°´¼ü×´Ì¬
   73   1        P2 = 0xF0;          //ÁÐÉ¨Ãè
   74   1        if(P2 != 0xF0 && keystate == 0)     //ÅÐ¶ÏÊÇ·ñÓÐ°´¼ü°´ÏÂ£¬Èç¹û°´¼üÒÑ¾­ÊÇ°´ÏÂ×´Ì¬Ôò²»½øÈëif
   75   1        {
   76   2          delayms(5);       //°´¼üÈ¥¶¶
   77   2          if(P2 != 0xF0 && keystate == 0)   //ÔÙ´ÎÅÐ¶ÏÊÇ·ñÓÐ°´¼ü°´ÏÂ£¬Èç¹û°´¼üÒÑ¾­ÊÇ°´ÏÂ×´Ì¬Ôò²»½øÈëif
   78   2          {
   79   3            keystate = 1;   //°´¼ü×´Ì¬Îª1£¬°´¼ü°´ÏÂ
   80   3            temp = P2;      //¶ÁÈ¡P2Öµ
   81   3            switch(temp)
   82   3            {
   83   4              case 0xE0:keyvalue = 1;break;     //µÚ1ÁÐÓÐ°´¼ü°´ÏÂ£¬¼üÖµµÈÓÚ1
   84   4              case 0xD0:keyvalue = 2;break;     //µÚ2ÁÐÓÐ°´¼ü°´ÏÂ£¬¼üÖµµÈÓÚ2
   85   4              case 0xB0:keyvalue = 3;break;     //µÚ3ÁÐÓÐ°´¼ü°´ÏÂ£¬¼üÖµµÈÓÚ3
   86   4              case 0x70:keyvalue = 4;break;     //µÚ4ÁÐÓÐ°´¼ü°´ÏÂ£¬¼üÖµµÈÓè4
   87   4            }
   88   3            P2 = 0x0F;        //·­×ªµçÆ½£¬ÐÐÉ¨Ãè
   89   3            if(P2 != 0x0F)    //ÅÐ¶ÏÊÇ·ñÓÐ°´¼ü°´ÏÂ
   90   3            {
   91   4              temp = P2;      //¶ÁÈ¡P2Öµ
   92   4              switch(temp)
   93   4              {
   94   5                case 0x07:keyvalue += 0;break;    //µÚ1ÐÐ°´ÏÂ£¬¼üÖµkeyvalue+0
   95   5                case 0x0B:keyvalue += 4;break;    //µÚ2ÐÐ°´ÏÂ£¬¼üÖµkeyvalue+4
   96   5                case 0x0D:keyvalue += 8;break;    //µÚ3ÐÐ°´ÏÂ£¬¼üÖµkeyvalue+8
   97   5                case 0x0E:keyvalue += 12;break;   //µÚ4ÐÐ°´ÏÂ£¬¼üÖµkeyvalue+12
   98   5              }
   99   4            }
  100   3            
  101   3          }
  102   2        }
  103   1        if(P2 == 0xF0) keystate = 0;    //ËÉ¿ª°´¼üºó£¬ÇåÁã°´¼ü×´Ì¬
  104   1        return keyvalue;                //·µ»Ø°´¼üºÅ
  105   1      }
  106          void Write595(u8 dat)     //595Ð´Êý¾Ýº¯Êý
  107          {
  108   1        u16 i;
  109   1        for(i = 0;i < 8;i++)    
  110   1        {
  111   2          SH = 0;               //À­µÍ´®ÐÐÊäÈëÊ±ÖÓSCLK
  112   2          DS = dat & 0x80;      //È¡×î¸ßÎ»
  113   2          SH = 1;               //SCKLÊ±ÖÓÉÏÉýÑØ£¬Êý¾Ý´æÒÆÎ»¼Ä´æÆ÷
  114   2          dat <<= 1;            //Ã¿´ÎÒ»Î»
  115   2        }
  116   1      }
  117          void Output595()          //595Êä³öº¯Êý
  118          {
  119   1        ST = 0;                 //À­µÍSTÊ±ÖÓ
  120   1        ST = 1;                 //STÊ±ÖÓÉÏÉýÑØ£¬¸üÐÂÊä³ö´æ´¢Æ÷Êý¾Ý
  121   1      }
C251 COMPILER V5.57.0,  main                                                               21/02/23  22:14:56  PAGE 3   

  122          
  123          void SEG_Disp(u8 dat,u8 wei)      //ÊýÂë¹ÜÏÔÊ¾º¯Êý
  124          {
  125   1        u8 datcode,weicode;
  126   1        datcode = SEG_Code[dat];        //È¡Ê®½øÖÆdat¶ÔÓ¦µÄ¶ÎÂë
  127   1        weicode = WEI_Code[wei-1];      //È¡Ê®½øÖÆwei¶ÔÓ¦µÄÎ»Âë
  128   1        
  129   1        Write595(datcode);              //ÏÈ·¢¶ÎÂë
  130   1        Write595(weicode);              //ÔÙ·¢Î»Âë
  131   1        Output595();                    //595Êä³öÏÔÊ¾
  132   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       295     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        21          1
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        29     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
