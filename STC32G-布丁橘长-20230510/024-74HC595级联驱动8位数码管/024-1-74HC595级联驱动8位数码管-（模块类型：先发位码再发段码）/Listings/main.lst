C251 COMPILER V5.57.0,  main                                                               21/02/23  19:39:12  PAGE 1   


C251 COMPILER V5.57.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\SoftWare\KeilC251\C251\BIN\C251.EXE main.c XSMALL BROWSE DEBUG PRINT(.\Listings\main.lst) TABS(2
                    -) OBJECT(.\Objects\main.obj) 

stmt  level    source

    1          //    @布丁橘长 2023/01/18
    2          //    2片74HC595级联驱动8位共阳极数码管,显示20230120
    3          //    8位数码管模块-595级联驱动-共阳极数码管
    4          //    实验采用 段码数组+位码数组
    5          //    A-DP接初级595输出Q0-Q7，公共端接次级595，COM1-Q0,COM2-Q1...COM8-Q7(数码管左边第一位接Q0，第二位Q1...)
    6          //    先发位码，再发段码
    7          //    74HC595引脚定义：DS(DIO)：P2.2 SH(SCK)-P2.1 ST(RCK)：P2.0
    8          //    本实验采用准双向口模式
    9          //    实验开发板：STC32G12K128-LQFP64 屠龙刀三.1  35MHz
   10          
   11          #include <STC32G.H>
   12          
   13          #define MAIN_Fosc 35000000UL    //定义主频35MHz，请根据实际使用频率修改（用于delay函数自适应主频）
   14          
   15          typedef unsigned char u8;       //unsigned char     类型用 u8 表示
   16          typedef unsigned int u16;       //unsigned int      类型用 u16表示
   17          typedef unsigned long int u32;  //unsigned long int 类型用 u32表示
   18          
   19          sbit DS = P2^2;       //串行输入DS(DIO)接P2.2
   20          sbit SH = P2^1;       //串行输入时钟SH(SCK)接P2.1
   21          sbit ST = P2^0;       //锁存时钟ST(RCK)接P2.0
   22          
   23          void delayms(u16 ms);           //延时函数声明
   24          void Write595(u8 dat);          //595写数据函数声明
   25          void Output595();               //595输出显示函数声明
   26          void SEG_Disp(u8 dat,u8 wei);   //数码管显示函数
   27          
   28          
   29          //共阳极段码数组
   30          u8 SEG_Code[13] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,   //共阳数码管段码：0~9,  
   31                              0xff,0xbf,0x00};  //数码管全灭（10），横杆-（11），数码管全亮（12）
   32          //共阳极位码数组-4位数码管
   33          u8 WEI_Code[8] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};   //共阳极位码数组，COM1接595Q0，COM2接Q1...即
             -数码管左边第一位接Q0...第八位接Q7
   34            
   35          /*======================================================================================================
   36          //共阴极段码数组
   37          u8 SEG_Code[13] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,   //共阴数码管段码：0~9,  
   38                              0x00,0x40,0xFF};  //数码管全灭（10），横杆-（11），数码管全亮（12）
   39          //共阴极位码数组
   40          u8 SEG_WeiCode[8] = {0x7F,0xBF,0xDF,0xEF,0xF7,0xFB,0xFD,0xFE};          //COM1-COM8位码，共阴极数码管
   41          ========================================================================================================*
             -/
   42          
   43          void main()
   44          {
   45   1        EAXFR = 1;        //使能XFR访问
   46   1        CKCON = 0x00;     //设置外部数据总线速度最快
   47   1        WTST = 0x00;      //设置程序读取等待时间为0个时钟，CPU执行程序速度最快
   48   1        
   49   1        P0M1 = 0x00;P0M0 = 0x00;    //设置P0口为准双向口模式 00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   50   1        P1M1 = 0x00;P1M0 = 0x00;    //设置P1口为准双向口模式 00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   51   1        P2M1 = 0x00;P2M0 = 0x00;    //设置P2口为准双向口模式 00：准双向口 01：推挽输出 10：高阻输入 11：开漏输出
   52   1        
   53   1        while(1)
   54   1        {
   55   2          SEG_Disp(2,1);          //数码管左边第1位显示数字2  
   56   2        //  delayms(1);             //延时1毫秒
C251 COMPILER V5.57.0,  main                                                               21/02/23  19:39:12  PAGE 2   

   57   2            
   58   2          SEG_Disp(0,2);          //数码管左边第2位显示数字0  
   59   2        //  delayms(1);             //延时1毫秒
   60   2            
   61   2          SEG_Disp(2,3);          //数码管左边第3位显示数字2  
   62   2        //  delayms(1);             //延时1毫秒
   63   2            
   64   2          SEG_Disp(3,4);          //数码管左边第4位显示数字3  
   65   2        //  delayms(1);             //延时1毫秒
   66   2            
   67   2          SEG_Disp(0,5);          //数码管左边第5位显示数字0  
   68   2        //  delayms(1);             //延时1毫秒
   69   2            
   70   2          SEG_Disp(1,6);          //数码管左边第6位显示数字1  
   71   2      //    delayms(1);             //延时1毫秒
   72   2            
   73   2          SEG_Disp(2,7);          //数码管左边第7位显示数字2  
   74   2        //  delayms(1);             //延时1毫秒
   75   2            
   76   2          SEG_Disp(0,8);          //数码管左边第8位显示数字0  
   77   2        //  delayms(1);             //延时1毫秒
   78   2        }
   79   1      }
   80          
   81          void  delayms(u16 ms)   //简单延时函数，自适应主频，1毫秒*ms
   82          {
   83   1        u16 i;
   84   1        do{
   85   2            i = MAIN_Fosc / 6000;
   86   2            while(--i);
   87   2          }while(--ms);
   88   1      }
   89          
   90          void Write595(u8 dat)     //595写数据函数
   91          {
   92   1        u16 i;
   93   1        for(i = 0;i < 8;i++)    
   94   1        {
   95   2          SH = 0;               //拉低串行输入时钟SCLK
   96   2          DS = dat & 0x80;      //取最高位
   97   2          SH = 1;               //SCKL时钟上升沿，数据存移位寄存器
   98   2          dat <<= 1;            //每次一位
   99   2        }
  100   1      }
  101          void Output595()          //595输出函数
  102          {
  103   1        ST = 0;                 //拉低ST时钟
  104   1        ST = 1;                 //ST时钟上升沿，更新输出存储器数据
  105   1      }
  106          
  107          void SEG_Disp(u8 dat,u8 wei)      //数码管显示函数
  108          {
  109   1        u8 datcode,weicode;
  110   1        datcode = SEG_Code[dat];        //取十进制dat对应的段码
  111   1        weicode = WEI_Code[wei-1];      //取十进制wei对应的位码
  112   1        
  113   1        Write595(weicode);              //先发位码
  114   1        Write595(datcode);              //再发段码
  115   1        Output595();                    //595输出显示
  116   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       164     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
C251 COMPILER V5.57.0,  main                                                               21/02/23  19:39:12  PAGE 3   

  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        21     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        29     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
